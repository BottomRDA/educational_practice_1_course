Основная часть любого рабочего процесса Git заключается в изменении файлов и фиксации изменений в этих файлах. При работе над проектом необходимо своевременно и часто фиксировать изменения. В этом уроке вы узнаете, как окно Изменения Git помогает управлять измененными файлами.
Окно Изменения Git — это боковая панель в Visual Studio. В нем отображаются наиболее распространенные команды Git для упрощения доступа во время написания кода. Размещение этого окна инструментов рядом с кодом и обозревателем решений упрощает работу.
Раздел состояния
Верхняя часть окна Изменения Git — это раздел состояния. Он показывает, в какой ветви вы находитесь.
В средстве выбора ветвей вы можете переключаться между ветвями или создавать новые ветви. Рядом с пунктом выбора ветви находятся кнопки Извлечь, Получить и Отправить. Эти кнопки помогают обеспечить синхронизацию локальной ветви с удаленной.
Под средством выбора ветви находится несколько исходящих и входящих фиксаций. При каждом выполнении фиксаций вы увидите, что первое число увеличивается, указывая на фиксации, которые можно отправить в удаленную ветвь. При каждом получении вы можете просмотреть, существуют ли неизвлеченные фиксации из удаленной ветви отслеживания. Если щелкнуть ссылку, откроется окно Репозиторий Git, в котором можно просмотреть сведения об исходящих и входящих фиксациях, а также локальный журнал ветвей.
Раздел изменений
Все добавляемые, удаляемые или изменяемые файлы будут отображаться в разделе Изменения как файлы, ожидающие изменений в рабочем каталоге. Во время написания кода вы, скорее всего, больше всего времени будете уделять просмотру измененного набора файлов. Каждый файл имеет индикатор справа для типа изменения.
•	A для добавленного файла
•	D для удаленного файла
•	M для измененного файла
Для отмены изменений также можно нажать кнопку быстрого действия.
При выборе измененного файла в Visual Studio откроется представление инструмента сравнения. В нем показана разница между предыдущей и текущей измененной версиями файла. Git сравнивает изменения, внесенные в файл, с последней фиксацией файла. Выбранный добавленный или удаленный файл откроется в наборе документов.
Вы можете изменить поведение выбора по умолчанию с помощью меню Действия (...) в разделе Изменения. В инструментах Git в Visual Studio вы заметите меню Действия в нескольких местах. Оно предоставляет дополнительные контекстные функции.
Раздел подготовленных изменений
Раздел Подготовленные изменения отображается только после подготовки одного файла или нескольких в разделе Изменения. Вы можете подготовить файлы, нажав кнопку со знаком "плюс" справа от файла, папки или всего раздела.
Подготовка файла эквивалентна команде git add. Эта функция позволяет сосредоточиться только на изменениях, ожидающих фиксации сейчас. Другие изменения можно сохранить до последующей фиксации.
Фиксация — это моментальный снимок изменений, внесенных в код. Например, вы хотите внести ряд изменений, но при этом упорядочить их в виде логических и легко доступных для чтения моментальных снимков. Это возможно с помощью подготовленных изменений. Чтобы удалить файл или папку из промежуточной области, просто нажмите кнопку со знаком "минус" справа.
Фиксация и обновление фиксаций
После подготовки файлов следующий логический шаг заключается в фиксации подготовленных файлов. Вы можете ввести сообщение о фиксации в текстовое поле, затем щелкнуть Зафиксировать промежуточно сохраненные изменения либо нажать сочетание клавиш CTRL + ВВОД, чтобы создать фиксацию. Кнопка Зафиксировать промежуточно сохраненные изменения также содержит раскрывающееся меню, в котором можно выбрать пункт Зафиксировать и отправить или Зафиксировать и синхронизировать, чтобы выполнить эти действия в одной команде.
При фиксации изменений иногда может потребоваться обновить фиксацию, если вы забыли добавить изменение или часть сообщения. Для этого используется флажок Исправить. Если его установить, можно изменить последнюю фиксацию в текущей ветви. Сообщение о фиксации появится в текстовом поле фиксации вместе с указанием на то, что следующее действие Зафиксировать промежуточно сохраненные изменения изменит конкретную фиксацию.
Отмена фиксации
В Visual Studio можно отменить сделанную фиксацию. Вы можете стереть только что выполненную локальную работу и начать с нуля, если вы сделали ошибку. В этом случае можно выбрать Сбросить (команду git reset), которая удаляет фиксацию из графа фиксации и сохраняет ее.
В интегрированной среде разработки есть два варианта сброса фиксаций. По умолчанию это сброс и сохранение изменений из этой фиксации (--mixed). В этом случае фиксация удаляется, а файлы, которые были изменены, отображаются в разделе Изменения в окне Изменения Git. Более опасной операцией является сброс и удаление изменений из фиксации (--hard).
Не следует сбрасывать фиксацию, которая была отправлена в общедоступный репозиторий. Удаление фиксации таким образом приведет к появлению пустого места, и это может вызвать проблемы, когда другие разработчики попытаются отправить свои фиксации. Чтобы отменить открытую фиксацию, можно нажать кнопку Отменить изменения (команда git revert). В Visual Studio при отмене фиксации создается новая вторая фиксация, отменяющую изменения, примененные при первой фиксации.

Раздел спрятанных изменений
В Visual Studio доступна возможность, позволяющая прятать изменения. С помощью раскрывающегося списка для кнопки Зафиксировать промежуточно сохраненные изменения вы можете спрятать все или только неподготовленные изменения.
Спрятанные изменения являются необязательными. Visual Studio использует сообщение скрытия по умолчанию, указывающее на изменения в незавершенном производстве (НЗП) для предыдущей фиксации в репозитории.
Щелкнув правой кнопкой мыши спрятанные изменения, вы получите доступ к дополнительным действиям.
•	Удалить — удаление спрятанных изменений.
•	Применить — восстановление изменений и сохранение спрятанных изменений.
•	Извлечь — восстановление изменений и удаление спрятанных изменений.
Одним из ключевых аспектов любого рабочего процесса Git является фиксация в вашей ветви. Фиксация — это эквивалент сохранения файла в Git. В этом упражнении вы вносите изменения в код, подготавливаете эти изменения и фиксируете их, не выходя из файлов кода.
Фиксация изменения
1.	Откройте файл Program.cs, выбрав его в Обозревателе решений.
2.	Измените выходное сообщение на "Hello Everyone!". Сохраните файл.

3.	Откройте окно Изменения Git для просмотра ожидающих изменений. Нажмите кнопку со знаком "плюс" рядом файлом Program.cs, чтобы подготовить файл.
4.	Теперь, когда изменения промежуточно сохранены, введите сообщение фиксации в текстовом поле, где в данный момент отображается Обновить выходное сообщение, и нажмите Зафиксировать промежуточно сохраненные изменения.
Проверка фиксации
В окне Изменения Git появится информационная строка с сообщением о локальном создании фиксации. Выберите идентификатор фиксации, чтобы открыть подробные сведения о фиксации. Чтобы открыть окно Репозиторий Git, можно также щелкнуть ссылку 1 исходящая/0 входящих над текстовым полем.
Просмотрите одну исходящую фиксацию, созданную в графе фиксации текущей ветви, чтобы убедиться, что она создана.
После фиксации в репозитории вы сохраняете локальные моментальные снимки кода. Следующим шагом является отправка фиксаций в GitHub для сохранения их в виде резервных копий или предоставления общего доступа к коду. Visual Studio использует команду git push для передачи содержимого локального репозитория в удаленный репозиторий.
Синхронизация с Git
Visual Studio помогает синхронизировать локальную ветвь с удаленной ветвью с помощью операций скачивания (получения и извлечения) и передачи (отправки). Эти операции отображаются в окне Репозиторий Git.
На главной панели окна Репозиторий Git показан локальный журнал выбранной ветви. Над локальным журналом отображаются два необязательных раздела.
•	В разделе Исходящие отображаются фиксации, которые еще не были отправлены в удаленный репозиторий.
•	В разделе Входящие отображаются фиксации, которые вы получили, но еще не извлекли из удаленного репозитория.
•	Перед отправкой необходимо получить и извлечь фиксацию. Получение проверяет, есть ли удаленные фиксации, которые следует включить в локальные изменения. Если они есть, извлеките их, чтобы предотвратить конфликты слияния с вышестоящей ветвью.
•	Visual Studio не позволяет отправлять фиксации, если локальная ветвь находится за удаленной ветвью. При попытке отправки открывается диалоговое окно с запросом на извлечение. В диалоговом окне есть кнопка Извлечь и отправить.
8512 знаков

Задание.
Вариант 22. Кириллица, по алфавиту, по возрастанию, учитывать числа, сортировка Шелла
Количество слов в тексте: 1069
Время сортировки: 13 миллисекунд
Статистика (количество слов на каждую букву алфавита): 
а - 3
б - 9
в - 149
г - 4
д - 39
е - 15
ё - 0
ж - 3
з - 18
и - 135
й - 0
к - 52
л - 19
м - 32
н - 51
о - 82
п - 107
р - 45
с - 103
т - 18
у - 38
ф - 88
х - 1
ц - 0
ч - 19
ш - 2
щ - 4
ъ - 0
ы - 0
ь - 0
э - 23
ю - 0
я - 4
0 - 0
1 - 2
2 - 1
3 - 1
4 - 1
5 - 0
6 - 0
7 - 0
8 - 1
9 - 0
